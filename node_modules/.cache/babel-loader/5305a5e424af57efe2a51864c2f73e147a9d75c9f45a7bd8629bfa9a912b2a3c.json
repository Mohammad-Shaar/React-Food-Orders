{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactMeal\\\\src\\\\store\\\\CardProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useState } from \"react\";\nimport CardContext from \"./card-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCardState = {\n  items: [],\n  totalAmount: 0\n};\n\n// const defaultSubmitState = {\n//   submiting: false,\n//   submitingHasError: null,\n// };\n\nconst cardReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCardItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCardItem = state.items[existingCardItemIndex]; // if the item not in the array, it will set to null\n    let updatedItems;\n    if (existingCardItem) {\n      const updatedItem = {\n        ...existingCardItem,\n        amount: existingCardItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCardItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  } else if (action.type === \"REMOVE\") {\n    const existingCardItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCardItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCardItemIndex] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCardState;\n};\nconst CardProvider = props => {\n  _s();\n  const [cardState, dispatchCardState] = useReducer(cardReducer, defaultCardState);\n\n  // const [submitState, dispatchSubmitState] = useReducer(\n  //   submitReducer,\n  //   defaultSubmitState\n  // );\n\n  // const [submiting, setSubmiting] = useState(false);\n  // const [submitingHasError, setSubmitingHasError] = useState(null);\n\n  // item is an object with meal data\n  const addItemToCardHandler = item => {\n    dispatchCardState({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemFromCardHandler = id => {\n    dispatchCardState({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n  const newOrderHandler = () => {\n    dispatchCardState({\n      type: \"newOrder\"\n    });\n  };\n\n  // for POST data in firebase\n  const userDataHandler = async data => {\n    setSubmiting(true);\n    try {\n      setSubmitingHasError(null);\n      const response = await fetch(\"https://reactmeals-80774-default-rtdb.irebaseio.com/order.json\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"\");\n      }\n    } catch (err) {\n      setSubmitingHasError(\"Somthing went wrong\");\n    }\n    setSubmiting(false);\n  };\n\n  // this is the object that will be updated\n  const cardContext = {\n    items: cardState.items,\n    totalAmount: cardState.totalAmount,\n    addItem: addItemToCardHandler,\n    removeItem: removeItemFromCardHandler,\n    newOrder: newOrderHandler,\n    onSubmitionData: userDataHandler,\n    submiting: submiting,\n    submitingHasError: submitingHasError\n  };\n  return /*#__PURE__*/_jsxDEV(CardContext.Provider, {\n    value: cardContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(CardProvider, \"XyJfGvNKdLNuXUHKP7xvQloyI1I=\");\n_c = CardProvider;\nexport default CardProvider;\nvar _c;\n$RefreshReg$(_c, \"CardProvider\");","map":{"version":3,"names":["useReducer","useState","CardContext","jsxDEV","_jsxDEV","defaultCardState","items","totalAmount","cardReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCardItemIndex","findIndex","id","existingCardItem","updatedItems","updatedItem","concat","existingItem","filter","CardProvider","props","_s","cardState","dispatchCardState","addItemToCardHandler","removeItemFromCardHandler","newOrderHandler","userDataHandler","data","setSubmiting","setSubmitingHasError","response","fetch","method","body","JSON","stringify","headers","ok","Error","err","cardContext","addItem","removeItem","newOrder","onSubmitionData","submiting","submitingHasError","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/ReactMeal/src/store/CardProvider.js"],"sourcesContent":["import { useReducer, useState } from \"react\";\r\nimport CardContext from \"./card-context\";\r\n\r\nconst defaultCardState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\n// const defaultSubmitState = {\r\n//   submiting: false,\r\n//   submitingHasError: null,\r\n// };\r\n\r\nconst cardReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const existingCardItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n\r\n    const existingCardItem = state.items[existingCardItemIndex]; // if the item not in the array, it will set to null\r\n    let updatedItems;\r\n\r\n    if (existingCardItem) {\r\n      const updatedItem = {\r\n        ...existingCardItem,\r\n        amount: existingCardItem.amount + action.item.amount,\r\n      };\r\n\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCardItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  } else if (action.type === \"REMOVE\") {\r\n    const existingCardItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n\r\n    const existingItem = state.items[existingCardItemIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n    let updatedItems;\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.items.filter((item) => item.id !== action.id);\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCardItemIndex] = updatedItem;\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  return defaultCardState;\r\n};\r\n\r\nconst CardProvider = (props) => {\r\n  const [cardState, dispatchCardState] = useReducer(\r\n    cardReducer,\r\n    defaultCardState\r\n  );\r\n\r\n  // const [submitState, dispatchSubmitState] = useReducer(\r\n  //   submitReducer,\r\n  //   defaultSubmitState\r\n  // );\r\n\r\n  // const [submiting, setSubmiting] = useState(false);\r\n  // const [submitingHasError, setSubmitingHasError] = useState(null);\r\n\r\n  // item is an object with meal data\r\n  const addItemToCardHandler = (item) => {\r\n    dispatchCardState({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemFromCardHandler = (id) => {\r\n    dispatchCardState({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const newOrderHandler = () => {\r\n    dispatchCardState({ type: \"newOrder\" });\r\n  };\r\n\r\n  // for POST data in firebase\r\n  const userDataHandler = async (data) => {\r\n    setSubmiting(true);\r\n\r\n    try {\r\n      setSubmitingHasError(null);\r\n      const response = await fetch(\r\n        \"https://reactmeals-80774-default-rtdb.irebaseio.com/order.json\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(data),\r\n          headers: { \"content-type\": \"application/json\" },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"\");\r\n      }\r\n    } catch (err) {\r\n      setSubmitingHasError(\"Somthing went wrong\");\r\n    }\r\n\r\n    setSubmiting(false);\r\n  };\r\n\r\n  // this is the object that will be updated\r\n  const cardContext = {\r\n    items: cardState.items,\r\n    totalAmount: cardState.totalAmount,\r\n    addItem: addItemToCardHandler,\r\n    removeItem: removeItemFromCardHandler,\r\n    newOrder: newOrderHandler,\r\n    onSubmitionData: userDataHandler,\r\n    submiting: submiting,\r\n    submitingHasError: submitingHasError,\r\n  };\r\n\r\n  return (\r\n    <CardContext.Provider value={cardContext}>\r\n      {props.children}\r\n    </CardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CardProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}