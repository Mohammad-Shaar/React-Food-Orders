{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\05-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const loginInformation = localStorage.getItem(\"isLogged\");\n    if (loginInformation === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const userInformation = {};\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    userInformation[`${email}`] = password;\n    console.log(userInformation);\n    localStorage.setItem(`${email}`, `${password}`);\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = userInformation => {\n    localStorage.removeItem(userInformation[`${email}`]);\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isAuthenticated: isLoggedIn,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","loginInformation","localStorage","getItem","userInformation","loginHandler","email","password","console","log","setItem","logoutHandler","removeItem","Fragment","children","isAuthenticated","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/05-starting-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const loginInformation = localStorage.getItem(\"isLogged\");\n\n    if (loginInformation === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const userInformation = {};\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    userInformation[`${email}`] = password;\n    console.log(userInformation);\n    localStorage.setItem(`${email}`, `${password}`);\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = (userInformation) => {\n    localStorage.removeItem(userInformation[`${email}`]);\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMU,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAEzD,IAAIF,gBAAgB,KAAK,GAAG,EAAE;MAC5BD,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,eAAe,GAAG,CAAC,CAAC;EAE1B,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxC;IACA;IACAH,eAAe,CAAE,GAAEE,KAAM,EAAC,CAAC,GAAGC,QAAQ;IACtCC,OAAO,CAACC,GAAG,CAACL,eAAe,CAAC;IAC5BF,YAAY,CAACQ,OAAO,CAAE,GAAEJ,KAAM,EAAC,EAAG,GAAEC,QAAS,EAAC,CAAC;IAC/CP,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMW,aAAa,GAAIP,eAAe,IAAK;IACzCF,YAAY,CAACU,UAAU,CAACR,eAAe,CAAE,GAAEE,KAAM,EAAC,CAAC,CAAC;IACpDN,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEJ,OAAA,CAACP,KAAK,CAACwB,QAAQ;IAAAC,QAAA,gBACblB,OAAA,CAACF,UAAU;MAACqB,eAAe,EAAEhB,UAAW;MAACiB,QAAQ,EAAEL;IAAc;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpExB,OAAA;MAAAkB,QAAA,GACG,CAACf,UAAU,iBAAIH,OAAA,CAACJ,KAAK;QAAC6B,OAAO,EAAEhB;MAAa;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC/CrB,UAAU,iBAAIH,OAAA,CAACH,IAAI;QAACuB,QAAQ,EAAEL;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAErB;AAACtB,EAAA,CApCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}