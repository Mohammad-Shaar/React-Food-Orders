{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactMeal\\\\src\\\\components\\\\Card\\\\LogCard.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../../Hooks/use-input\";\nimport Modal from \"../UI/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogCard = props => {\n  _s();\n  const {\n    enterdInput: enterdName,\n    inputIsInValid: nameInputHasError,\n    inputIsValid: enterdNameIsValid,\n    inputBlurHandler: nameBlurHandler,\n    inputChangeHandler: nameChangeHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    enterdInput: enterdEmail,\n    inputIsInValid: emailInputHasError,\n    inputIsValid: enterdEmailIsValid,\n    inputBlurHandler: emailBlurHandler,\n    inputChangeHandler: emailChangeHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes(\"@\"));\n  const {\n    enterdInput: enterdPassword,\n    inputIsInValid: passwordInputHasError,\n    inputIsValid: enterdPasswordIsValid,\n    inputBlurHandler: passwordBlurHandler,\n    inputChangeHandler: passwordChangeHandler,\n    reset: resetPasswordInput\n  } = useInput(value => value.trim() !== \"\");\n  const allInputsValid = !enterdNameIsValid || !enterdEmailIsValid || !enterdPasswordIsValid;\n  const submitHandler = e => {\n    e.preventDefault();\n    if (allInputsValid) {\n      return;\n    }\n    resetNameInput();\n    resetEmailInput();\n    resetPasswordInput();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onHideCard,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputHasError ? \"form-control invalid\" : \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Your Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enterdName,\n          onBlur: nameBlurHandler,\n          onChange: nameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name should not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: emailInputHasError ? \"form-control invalid\" : \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          value: enterdEmail,\n          onBlur: emailBlurHandler,\n          onChange: emailChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Email should contain '@'\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: passwordInputHasError ? \"form-control invalid\" : \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enterdPassword,\n          onBlur: passwordBlurHandler,\n          onChange: passwordChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), passwordInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Password should not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: allInputsValid,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(LogCard, \"XrsND1XdeX/m+hQNeu7j0Pb8b8w=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = LogCard;\nexport default LogCard;\nvar _c;\n$RefreshReg$(_c, \"LogCard\");","map":{"version":3,"names":["useInput","Modal","jsxDEV","_jsxDEV","LogCard","props","_s","enterdInput","enterdName","inputIsInValid","nameInputHasError","inputIsValid","enterdNameIsValid","inputBlurHandler","nameBlurHandler","inputChangeHandler","nameChangeHandler","reset","resetNameInput","value","trim","enterdEmail","emailInputHasError","enterdEmailIsValid","emailBlurHandler","emailChangeHandler","resetEmailInput","includes","enterdPassword","passwordInputHasError","enterdPasswordIsValid","passwordBlurHandler","passwordChangeHandler","resetPasswordInput","allInputsValid","submitHandler","e","preventDefault","onClose","onHideCard","children","onSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onBlur","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/ReactMeal/src/components/Card/LogCard.js"],"sourcesContent":["import useInput from \"../../Hooks/use-input\";\r\nimport Modal from \"../UI/Modal\";\r\n\r\nconst LogCard = (props) => {\r\n  const {\r\n    enterdInput: enterdName,\r\n    inputIsInValid: nameInputHasError,\r\n    inputIsValid: enterdNameIsValid,\r\n    inputBlurHandler: nameBlurHandler,\r\n    inputChangeHandler: nameChangeHandler,\r\n    reset: resetNameInput,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    enterdInput: enterdEmail,\r\n    inputIsInValid: emailInputHasError,\r\n    inputIsValid: enterdEmailIsValid,\r\n    inputBlurHandler: emailBlurHandler,\r\n    inputChangeHandler: emailChangeHandler,\r\n    reset: resetEmailInput,\r\n  } = useInput((value) => value.includes(\"@\"));\r\n\r\n  const {\r\n    enterdInput: enterdPassword,\r\n    inputIsInValid: passwordInputHasError,\r\n    inputIsValid: enterdPasswordIsValid,\r\n    inputBlurHandler: passwordBlurHandler,\r\n    inputChangeHandler: passwordChangeHandler,\r\n    reset: resetPasswordInput,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const allInputsValid =\r\n    !enterdNameIsValid || !enterdEmailIsValid || !enterdPasswordIsValid;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (allInputsValid) {\r\n      return;\r\n    }\r\n\r\n    resetNameInput();\r\n    resetEmailInput();\r\n    resetPasswordInput();\r\n  };\r\n\r\n  return (\r\n    <Modal onClose={props.onHideCard}>\r\n      <form onSubmit={submitHandler}>\r\n        <div\r\n          className={\r\n            nameInputHasError ? \"form-control invalid\" : \"form-control\"\r\n          }\r\n        >\r\n          <label htmlFor=\"name\">Your Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            value={enterdName}\r\n            onBlur={nameBlurHandler}\r\n            onChange={nameChangeHandler}\r\n          />\r\n          {nameInputHasError && (\r\n            <p className=\"error-text\">Name should not be empty</p>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={\r\n            emailInputHasError ? \"form-control invalid\" : \"form-control\"\r\n          }\r\n        >\r\n          <label htmlFor=\"email\">Your Email:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"email\"\r\n            value={enterdEmail}\r\n            onBlur={emailBlurHandler}\r\n            onChange={emailChangeHandler}\r\n          />\r\n          {emailInputHasError && (\r\n            <p className=\"error-text\">Email should contain '@'</p>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={\r\n            passwordInputHasError ? \"form-control invalid\" : \"form-control\"\r\n          }\r\n        >\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={enterdPassword}\r\n            onBlur={passwordBlurHandler}\r\n            onChange={passwordChangeHandler}\r\n          />\r\n          {passwordInputHasError && (\r\n            <p className=\"error-text\">Password should not be empty</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <button disabled={allInputsValid}>Submit</button>\r\n        </div>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LogCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}